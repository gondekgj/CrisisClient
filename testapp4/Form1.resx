<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>105, 17</value>
  </metadata>
  <metadata name="timer2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAS047AE1PQgFOUEMATU9BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAASj8tAExAMAVHOylQSDonnEk7KI9JOyo1b31sAE5DMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAE9HOABGNCIASToqW0k5KPFJOif/Sjso/0o6KNpKOyoxSjopAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAS0AwAEpAMAlJOii5Sjoo/0s6Kf9KOij/STon/0k5J4RINCAAW1NDAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMQC4ASz8tDks7KMdMPCn/TDsp/0o5KP9JOSf/RzkmlUgs
        FgBXTj8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        oQWvsqgAr7KnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABRRzcAVltUAU08KpJLOyj/Sjop/0o6Kf9KOin7STspY0c3JABuZ1oAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFdYVgBLPSoATD8tIUs8Kq1KOintSjop50g6KY1IPi4OSD0tAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFZbUABNPCwATkMzDEw/Li9LPi0pSj8yBko9
        LwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////+////+D////gf///wH///8B///DgcP/gYGB/wHDgP8B54D/AY
        GA/wAAAf+AAAH/5gB///wAf//8AH///gB//4AAf/+AAAP/AAAB/wHnAf8B54D/gYOA/4OBgf//AYH//w
        Hn//8B////gf///8P/////////////////8=
</value>
  </data>
</root>